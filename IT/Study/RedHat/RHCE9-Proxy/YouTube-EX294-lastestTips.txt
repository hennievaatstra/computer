vid.01
vid.02 Ansible inventory & configfile
  - ansible.cfg:
    [defaults]
      remote_user,inventory,roles_path.collections_path,ask_pass=false
    [privilege_escalation]
      become,become_user,become_method,become_ask_pass
  - inventory:
      [dev],[test],[prod],[balancers],[webservers:children]
  - check:
      $ ansible --version
      $ ansible all --list-hosts
      $ ansible all -m ping

vid.03 Configuration of local YUM repo
  - maak playbook met 2 tasks
    - task 1 AppStream
      gpgcheck: http://content.....
    - task 2 BaseOS
      gpgcheck: http://content.....
  - run playbook
      $ ansible-navigator run -m stdout <playbook>
  - check:
      $ ansible all -m command -a "ls /etc/yum.repos.d"
      $ ansible all -m command -a "yum clean all"
      $ ansible all -m command -a "yum repolist all"

vid.04 Installation of collections
  !! gebruik full-pathnames met galaxy
  $ ansible-galaxy collection install <URL> -p /home/student/ansible/collections/
  - check:
      $ ansible-navigator collections
  - check [ansible.posix]
      $ ansible-navigator doc -m stdout firewalld

vid.05. Installation of roles
- install 2 roles: balancer en phpinfo
  - doe phpinfo eerst, dan balancer
  - requirements.yml:
    - src: http://github.com/.......git
      name: phpinfo
    - src: http://github.com/.......git
      name: balancer
  - install:
    $ ansible-galaxy install -r /home/student/ansible/roles/requirements.yml -p /home/student/ansible/roles/
  !! gebruik full-pathnames met galaxy

vid.06. Create offline role
  $ cd roles/
    $ ansible-galaxy init <rolename>
  - in template:
    My host is {{ ansible_facts['hostname'] }} on {{ ansible_facts['default_ipv4']['address'] }}
  - playbook to import role:
    - host: dev
      roles:
        - apache
  - check:
    $ ansible-navigator run -m stdout --syntax-check
    $ ansible-navigator run -m stdout
  - check werbserver running:
    $ curl http://node1.lab.example.com
    My host is node1 on 192.168.1.10

vid.07 Install roles
  - create playbook to import roles
    $ vi <playbook>
    - hosts: webservers
      roles:
        - phpinfo
    - hosts: balancers
      roles:
        - balancers
  - run balancer and phpinfo roles
   $ ansible-navigator run -m stdout <playbook> 

vid.08 Installation of RHEL system roles
  - you get either timesync or SELinux
  - install systemroles RPM (!)
    $ sudo dnf install rhel-system-roles -y
  - check:
    $ ls /usr/share/ansible/roles
  !! he copies ~/ansible/collections/rhel-system-roles.timesync to ~/ansible/roles
  - create timesync playbook
    - hosts:
      vars:
        timesync_ntp_servers:
          - hostname: <IP>
            iburst: yes
      roles:
        - rhel-system-roles.timesync
  !! see README.md in role
  - run
    $ ansible-navigator run -m stdout <playbook.yml>

vid.09 Install of SELinux systemroles
  - see vid.08
  - install systemroles RPM
    $ sudo dnf install rhel-system-roles -y
  - again: copy from collections/ to roles/
  - create selinux playbook
    - hosts: all
      vars:
        selinux_state: enforcing
        selinux_policy: targeted
      roles:
        - rhel-system-roles.selinux 
  - run
    $ ansible-navigator run -m stdout <playbook>
  - check
    $ ansible all -m command "cat /etc/selinux/config"

vid.10 Creation of web content
  !! check firewalld/httpd installed/running on target hosts
     - install/enable if needed
  - create playbook
  - use modules:
    file:,copy:,firewalld:,

